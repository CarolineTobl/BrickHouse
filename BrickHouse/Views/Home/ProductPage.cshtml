@using BrickHouse.Models.ViewModels
@{Layout = "~/Views/Shared/_Layout.cshtml";}

@model ProductsListViewModel



<br />
<br />
<br />
<br />
<form asp-action="ProductPage" method="get">
    <div class="row">
        <div class="col-md-offset-1 col-md-11">
            <div class="float-right">
                Items per page:
                <select id="itemsPerPageDropdown" name="pageSize" class="form-control" onchange="this.form.submit()">
                    <option value="" selected disabled>Currently Displaying @Model.ItemsPerPage Items per Page</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                </select>
            </div>
        </div>
    </div>
</form>

<div class="row">
    <div class="col-md-3">
        <form asp-action="ProductPage" method="get">

        @await Component.InvokeAsync("ProductTypes", new { primaryCategory = Model.CurrentProductType, secondaryCategory = Model.CurrentProductType })
        @await Component.InvokeAsync("Color", new { primaryColor = Model.CurrentColor, secondaryColor = Model.CurrentColor })
        
        <button type="submit" class="btn btn-primary">Apply Filters</button>
        </form>
    </div>

    <div class="col-md-9">
        @if (Model.CurrentProductType == null)
        {
            @foreach (Product p in Model.Products)
            {
                <partial name="ProductSummary" model="p" />
            }
        }
        else
        {
            @foreach (Product p in Model.Products.Where(p => p.PrimaryCategory == Model.CurrentProductType || p.SecondaryCategory == Model.CurrentProductType))
            {
                <partial name="ProductSummary" model="p" />
            }
        }
    </div>

</div>


<div page-model="Model.PaginationInfo"
     page-action="ProductPage"
     current-product-type="@Model.CurrentProductType"
     current-color="@Model.CurrentColor"
     items-per-page="@Model.ItemsPerPage"
     current-page="@Model.PaginationInfo.CurrentPage"
     total-pages="@Model.PaginationInfo.TotalPages"
     page-classes-enabled="true"
     page-class="btn"
     page-class-normal="btn-outline-dark"
     page-class-selected="btn-primary"
     class="btn-grp pull-right m-1">
</div>


