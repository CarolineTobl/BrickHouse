@using BrickHouse.Models.ViewModels
@{
    ViewData["Title"] = "Products Page";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}

@model ProductsListViewModel

<br />
<br />
<br />

<h1 class="page-title">Shop our Products</h1>

<div class="row">
    <h3>Filters:</h3>
    <div class="col-md-2 filter-container">
        <form asp-action="ProductPage" method="get">
            <div class="category-filter">
                @await Component.InvokeAsync("ProductTypes", new { primaryCategory = Model.CurrentProductType, secondaryCategory = Model.CurrentProductType })
            </div>
            <div class="color-filter">
                @await Component.InvokeAsync("Color", new { primaryColor = Model.CurrentColor, secondaryColor = Model.CurrentColor })
            </div>
            <br />
            <div class="items-per-page-filter">
                <select id="itemsPerPageDropdown" name="pageSize" class="form-control" onchange="this.form.submit()">
                    <option value="" selected disabled>@Model.ItemsPerPage Items per Page</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                </select>
            </div>
        </form>
    </div>

    <div class="col-md-10">
        <div class="products-grid">
            @if (Model.CurrentProductType == null)
            {
                @foreach (Product p in Model.Products)
                {
                    <partial name="ProductSummary" model="p" />
                }
            }
            else
            {
                @foreach (Product p in Model.Products.Where(p => p.PrimaryCategory == Model.CurrentProductType || p.SecondaryCategory == Model.CurrentProductType))
                {
                    <partial name="ProductSummary" model="p" />
                }
            }
        </div>
    </div>
</div>




<div class="row">
    <div class="col-md-8 offset-md-2"> <!-- Center the pagination by using offset -->
        <div class="pagination-container" style="text-align: center;">
            <div page-model="Model.PaginationInfo"
                 page-action="ProductPage"
                 current-product-type="@Model.CurrentProductType"
                 current-color="@Model.CurrentColor"
                 items-per-page="@Model.ItemsPerPage"
                 current-page="@Model.PaginationInfo.CurrentPage"
                 total-pages="@Model.PaginationInfo.TotalPages"
                 page-classes-enabled="true"
                 page-class="btn"
                 page-class-normal="btn-outline-dark"
                 page-class-selected="btn-primary"
                 class="btn-grp">
            </div>
        </div>
    </div>


</div>
